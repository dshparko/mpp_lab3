Index: Tests/Tests.csproj
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"utf-8\"?>\r\n<Project ToolsVersion=\"4.0\" DefaultTargets=\"Build\" xmlns=\"http://schemas.microsoft.com/developer/msbuild/2003\">\r\n    <Import Project=\"..\\packages\\NUnit.3.12.0\\build\\NUnit.props\" Condition=\"Exists('..\\packages\\NUnit.3.12.0\\build\\NUnit.props')\" />\r\n    <Import Project=\"$(MSBuildExtensionsPath)\\$(MSBuildToolsVersion)\\Microsoft.Common.props\" Condition=\"Exists('$(MSBuildExtensionsPath)\\$(MSBuildToolsVersion)\\Microsoft.Common.props')\" />\r\n    <PropertyGroup>\r\n        <Configuration Condition=\" '$(Configuration)' == '' \">Debug</Configuration>\r\n        <Platform Condition=\" '$(Platform)' == '' \">AnyCPU</Platform>\r\n        <ProjectGuid>{1C8CB6E3-5C9E-4A86-BC82-4743DDD17D4A}</ProjectGuid>\r\n        <ProjectTypeGuids>{FAE04EC0-301F-11D3-BF4B-00C04F79EFBC}</ProjectTypeGuids>\r\n        <OutputType>Library</OutputType>\r\n        <AppDesignerFolder>Properties</AppDesignerFolder>\r\n        <RootNamespace>Tests</RootNamespace>\r\n        <AssemblyName>Tests</AssemblyName>\r\n        <TargetFrameworkVersion>v4.7.2</TargetFrameworkVersion>\r\n        <FileAlignment>512</FileAlignment>\r\n    </PropertyGroup>\r\n    <PropertyGroup Condition=\" '$(Configuration)|$(Platform)' == 'Debug|AnyCPU' \">\r\n        <PlatformTarget>AnyCPU</PlatformTarget>\r\n        <DebugSymbols>true</DebugSymbols>\r\n        <DebugType>full</DebugType>\r\n        <Optimize>false</Optimize>\r\n        <OutputPath>bin\\Debug\\</OutputPath>\r\n        <DefineConstants>DEBUG;TRACE</DefineConstants>\r\n        <ErrorReport>prompt</ErrorReport>\r\n        <WarningLevel>4</WarningLevel>\r\n    </PropertyGroup>\r\n    <PropertyGroup Condition=\" '$(Configuration)|$(Platform)' == 'Release|AnyCPU' \">\r\n        <PlatformTarget>AnyCPU</PlatformTarget>\r\n        <DebugType>pdbonly</DebugType>\r\n        <Optimize>true</Optimize>\r\n        <OutputPath>bin\\Release\\</OutputPath>\r\n        <DefineConstants>TRACE</DefineConstants>\r\n        <ErrorReport>prompt</ErrorReport>\r\n        <WarningLevel>4</WarningLevel>\r\n    </PropertyGroup>\r\n    <PropertyGroup Condition=\" '$(Configuration)|$(Platform)' == '|AnyCPU' \">\r\n      <OutputPath>bin\\\\</OutputPath>\r\n    </PropertyGroup>\r\n    <ItemGroup>\r\n        <Reference Include=\"nunit.framework, Version=3.12.0.0, Culture=neutral, PublicKeyToken=2638cd05610744eb\">\r\n          <HintPath>..\\packages\\NUnit.3.12.0\\lib\\net45\\nunit.framework.dll</HintPath>\r\n          <Private>True</Private>\r\n        </Reference>\r\n        <Reference Include=\"System\" />\r\n        <Reference Include=\"System.Core\" />\r\n        <Reference Include=\"System.Data\" />\r\n        <Reference Include=\"System.Xml\" />\r\n    </ItemGroup>\r\n    <ItemGroup>\r\n        <Compile Include=\"Tests.cs\" />\r\n        <Compile Include=\"Properties\\AssemblyInfo.cs\" />\r\n    </ItemGroup>\r\n    <ItemGroup>\r\n      <ProjectReference Include=\"..\\AssemblyBrowserLib\\AssemblyBrowserLib.csproj\">\r\n        <Project>{f3034a85-383b-4cf1-9b5c-c2e3f2bd2922}</Project>\r\n        <Name>AssemblyBrowserLib</Name>\r\n      </ProjectReference>\r\n    </ItemGroup>\r\n    <ItemGroup>\r\n      <Content Include=\"Resources\\View.exe\" />\r\n    </ItemGroup>\r\n    <ItemGroup>\r\n      <None Include=\"packages.config\" />\r\n    </ItemGroup>\r\n    <Import Project=\"$(MSBuildToolsPath)\\Microsoft.CSharp.targets\" />\r\n    <Target Name=\"EnsureNuGetPackageBuildImports\" BeforeTargets=\"PrepareForBuild\">\r\n      <PropertyGroup>\r\n        <ErrorText>This project references NuGet package(s) that are missing on this computer. Enable NuGet Package Restore to download them.  For more information, see http://go.microsoft.com/fwlink/?LinkID=322105.The missing file is {0}.</ErrorText>\r\n      </PropertyGroup>\r\n      <Error Condition=\"!Exists('..\\packages\\NUnit.3.12.0\\build\\NUnit.props')\" Text=\"$([System.String]::Format('$(ErrorText)', '..\\packages\\NUnit.3.12.0\\build\\NUnit.props'))\" />\r\n    </Target>\r\n    <!-- To modify your build process, add your task inside one of the targets below and uncomment it. \r\n         Other similar extension points exist, see Microsoft.Common.targets.\r\n    <Target Name=\"BeforeBuild\">\r\n    </Target>\r\n    <Target Name=\"AfterBuild\">\r\n    </Target>\r\n    -->\r\n\r\n</Project>\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/Tests/Tests.csproj b/Tests/Tests.csproj
--- a/Tests/Tests.csproj	(revision bcf0d5528a3d7ad4e2130a8cd7825ab2143d31ef)
+++ b/Tests/Tests.csproj	(date 1639501225003)
@@ -37,6 +37,10 @@
       <OutputPath>bin\\</OutputPath>
     </PropertyGroup>
     <ItemGroup>
+        <Reference Include="Microsoft.VisualStudio.QualityTools.UnitTestFramework, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
+          <HintPath>..\packages\Microsoft.VisualStudio.UnitTesting.11.0.50727.1\lib\net45\Microsoft.VisualStudio.QualityTools.UnitTestFramework.dll</HintPath>
+          <Private>True</Private>
+        </Reference>
         <Reference Include="nunit.framework, Version=3.12.0.0, Culture=neutral, PublicKeyToken=2638cd05610744eb">
           <HintPath>..\packages\NUnit.3.12.0\lib\net45\nunit.framework.dll</HintPath>
           <Private>True</Private>
Index: AssemblyBrowserLib/format/ClassFormatter.cs
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>using System;\r\n\r\nnamespace AssemblyBrowserLib.format\r\n{\r\n    public static class ClassFormatter\r\n    {\r\n        public static string Format(Type type)\r\n        {\r\n            \r\n            var na = type.Namespace;\r\n            var name = type.Name;\r\n\r\n            var result = string.Join(\" \", GetTypeAccessorModifiers(type), GetTypeModifiers(type),\r\n                GetType(type), type.Name);\r\n            return result;\r\n        }\r\n\r\n        private static string GetTypeAccessorModifiers(Type type)\r\n        {\r\n            if (type.IsNestedPublic || type.IsPublic)\r\n                return \"public\";\r\n            if (type.IsNestedPrivate)\r\n                return \"private\";\r\n            if (type.IsNestedFamily)\r\n                return \"protected\";\r\n            if (type.IsNestedAssembly)\r\n                return \"internal\";\r\n            if (type.IsNestedFamORAssem)\r\n                return \"protected internal\";\r\n            if (type.IsNestedFamANDAssem)\r\n                return \"private protected \";\r\n            if (type.IsNotPublic)\r\n                return \"private \";\r\n\r\n            return \"\";\r\n        }\r\n        \r\n        private static string GetTypeModifiers(Type type)\r\n        {\r\n            if (type.IsAbstract && type.IsSealed)\r\n                return \"static\";\r\n            if (type.IsAbstract)\r\n                return \"abstract\";\r\n            if (type.IsSealed)\r\n                return \"sealed\";\r\n\r\n            return \"\";\r\n        }\r\n\r\n        private static string GetType(Type type)\r\n        {\r\n            if (type.IsClass)\r\n                return \"class \";\r\n            if (type.IsEnum)\r\n                return \"enum \";\r\n            if (type.IsInterface)\r\n                return \"interface \";\r\n            if (type.IsGenericType)\r\n                return \"generic \";\r\n            if (type.IsValueType && !type.IsPrimitive)\r\n                return \"struct \";\r\n\r\n            return \"\";\r\n        }\r\n    }\r\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/AssemblyBrowserLib/format/ClassFormatter.cs b/AssemblyBrowserLib/format/ClassFormatter.cs
--- a/AssemblyBrowserLib/format/ClassFormatter.cs	(revision bcf0d5528a3d7ad4e2130a8cd7825ab2143d31ef)
+++ b/AssemblyBrowserLib/format/ClassFormatter.cs	(date 1639545352497)
@@ -47,6 +47,7 @@
             return "";
         }
 
+        
         private static string GetType(Type type)
         {
             if (type.IsClass)
Index: Tests/packages.config
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"utf-8\"?>\r\n<packages>\r\n  <package id=\"NUnit\" version=\"3.12.0\" targetFramework=\"net472\" />\r\n</packages>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/Tests/packages.config b/Tests/packages.config
--- a/Tests/packages.config	(revision bcf0d5528a3d7ad4e2130a8cd7825ab2143d31ef)
+++ b/Tests/packages.config	(date 1639501225047)
@@ -1,4 +1,5 @@
 <?xml version="1.0" encoding="utf-8"?>
 <packages>
+  <package id="Microsoft.VisualStudio.UnitTesting" version="11.0.50727.1" targetFramework="net472" />
   <package id="NUnit" version="3.12.0" targetFramework="net472" />
 </packages>
\ No newline at end of file
Index: Tests/Tests.cs
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>using AssemblyBrowserLib;\r\nusing NUnit.Framework;\r\n\r\nnamespace Tests\r\n{\r\n    [TestFixture]\r\n    public class Tests\r\n    {\r\n        private readonly AssemblyBrowser _browser = new AssemblyBrowser();\r\n        private const string TestDirectory = \"C:\\\\Users\\\\Lenovo\\\\OneDrive - bsuir.by\\\\Рабочий стол\\\\Lab3_AssemblyBrowser\\\\Tests\\\\TestFiles\\\\\";\r\n\r\n        [Test]\r\n        public void DllBrowserWorkFinishedCorrectly()\r\n        {\r\n            _browser.GetAssemblyInfo(TestDirectory+\"AssemblyBrowserLib.dll\");\r\n            \r\n            Assert.True(true);\r\n        }\r\n        \r\n        [Test]\r\n        public void ExeBrowserWorkFinishedCorrectly()\r\n        {\r\n            _browser.GetAssemblyInfo(TestDirectory+\"TestClass.exe\");\r\n            \r\n            Assert.True(true);\r\n        }\r\n        \r\n        [Test]\r\n        public void ExeBrowserWorkFinishedCorrectly2()\r\n        {\r\n            _browser.GetAssemblyInfo(TestDirectory+\"View.exe\");\r\n            \r\n            Assert.True(true);\r\n        }\r\n        \r\n        [Test]\r\n        public void NameSpaceIsCorrect()\r\n        {\r\n            var assemblyInfo = _browser.GetAssemblyInfo(TestDirectory+\"TestClass.exe\");\r\n            ;\r\n            Assert.IsTrue(assemblyInfo[0].Signature.Equals(\"TestClass\") );\r\n        }\r\n        \r\n        [Test]\r\n        public void ClassIsCorrect()\r\n        {\r\n            var assemblyInfo = _browser.GetAssemblyInfo(TestDirectory+\"TestClass.exe\");\r\n            ;\r\n            Assert.IsTrue(assemblyInfo[0].Class.Equals(\"public  class  A\") );\r\n        }\r\n        \r\n        [Test]\r\n        public void MethodAmountIsCorrect()\r\n        {\r\n            var assemblyInfo = _browser.GetAssemblyInfo(TestDirectory+\"TestClass.exe\");\r\n            ;\r\n            Assert.AreEqual(assemblyInfo[0].Members.Count, 3);\r\n        }\r\n        \r\n        [Test]\r\n        public void MethodNotNull()\r\n        {\r\n            var assemblyInfo = _browser.GetAssemblyInfo(TestDirectory+\"TestClass.exe\");\r\n            ;\r\n            Assert.NotNull(assemblyInfo[1].Members);\r\n        }\r\n    }\r\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/Tests/Tests.cs b/Tests/Tests.cs
--- a/Tests/Tests.cs	(revision bcf0d5528a3d7ad4e2130a8cd7825ab2143d31ef)
+++ b/Tests/Tests.cs	(date 1639502799989)
@@ -10,13 +10,32 @@
         private const string TestDirectory = "C:\\Users\\Lenovo\\OneDrive - bsuir.by\\Рабочий стол\\Lab3_AssemblyBrowser\\Tests\\TestFiles\\";
 
         [Test]
-        public void DllBrowserWorkFinishedCorrectly()
+        public void DllBrowserIsNotEmpty()
         {
-            _browser.GetAssemblyInfo(TestDirectory+"AssemblyBrowserLib.dll");
             
-            Assert.True(true);
+            int expected = 0;
+            int actual = _browser.GetAssemblyInfo(TestDirectory+"AssemblyBrowserLib.dll").Count;
+            Assert.AreNotEqual(expected,actual);
+         //   Assert.True(true);
+        }
+        
+        [Test]
+        public void CorrectClassCount()
+        {
+            int expected = 3;
+            int actual = _browser.GetAssemblyInfo(TestDirectory+"TestClass.exe")[0].Members.Count;
+            Assert.AreEqual(expected, actual);
+        }
+        [Test]
+        public void ClassHasCorrectMembersCount()
+        {
+            int expected = 2;
+            Container container = (Container)_browser.GetAssemblyInfo(TestDirectory+"TestClass.exe")[0].Members[0];
+            int actual = container.Members.Count;
+            Assert.AreEqual(expected, actual);
         }
-        
+
+
         [Test]
         public void ExeBrowserWorkFinishedCorrectly()
         {
@@ -48,14 +67,7 @@
             ;
             Assert.IsTrue(assemblyInfo[0].Class.Equals("public  class  A") );
         }
-        
-        [Test]
-        public void MethodAmountIsCorrect()
-        {
-            var assemblyInfo = _browser.GetAssemblyInfo(TestDirectory+"TestClass.exe");
-            ;
-            Assert.AreEqual(assemblyInfo[0].Members.Count, 3);
-        }
+     
         
         [Test]
         public void MethodNotNull()
